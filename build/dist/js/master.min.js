/*! warpztodoapp - v1.0.0 - 2016-06-12 */

var todoAppLibs=todoAppLibs||{};/* A simple data layer for XHR and localStorage services */
todoAppLibs.DataLayer=function(){"use strict";function a(){console.time("getTodoData");// time the async request.
// Load json via XHR
var a=$.ajax({url:"data/todo_data_default.json",dataType:"json",cache:!0}).done(function(a){todoAppLibs.Storage.setItem("todo_data",JSON.stringify(a))}).fail(function(a){console.error("Error: DataLayer.getTodoData()",a),$(".todo-app .main").text("IO Error, please retry in a while.")}).always(function(){console.timeEnd("getTodoData")});return a}
// Deserialize todo-data-test-format and insert the updated tasks, then serialize it back to Storage.
function b(){var a=todoAppLibs.Storage.getItem("todo_data");if(null!==a){var b=JSON.parse(a);b.todo_tasks=todoApp.getAllTasksArray(),b.last_modified=Date.now(),// update timestamp
todoAppLibs.Storage.setItem("todo_data",JSON.stringify(b)),console.debug("Data was updated locally")}}var c={getTodoData:a,updateLocalData:b};return c}();var todoAppLibs=todoAppLibs||{};/* Wrapper for HTML5 localStorage, that fallbacks to sessionStorage, in future set as an option */
todoAppLibs.Storage=function(){"use strict";var a=localStorage||sessionStorage,b={setItem:function(b,c){a.setItem(b,c)},removeItem:function(b){a.removeItem(b)},getItem:function(b){return a.getItem(b)},clear:function(){a.clear()}};return b}(),$(function(){"use strict";function a(a){var b;if(a.todo_tasks.length>0)for(b=0;b<a.todo_tasks.length;b++)c.trigger("NewTask.TodoAppUI",{task:a.todo_tasks[b]})}function b(){var b=todoAppLibs.Storage.getItem("todo_data");if(null===b){console.info("Fetching (default) todo json data via XHR.");var c=todoAppLibs.DataLayer.getTodoData();c.done(function(b){
// todo data is available.
a(b)})}else{console.info("Loading todo json data from localStorage.");var d=JSON.parse(b);a(d)}}var c=$(window),d=$(".todo-app"),e=d.find(".action-todo-add");/* Event handlers */
/* API events */
c.on("NewTask.TodoAppUI.DataLayer",function(a,b){console.info("NewTask Event recieved from:",a.namespace,b.task);var c={};c.title=b.task.title||"Untitled",c.id=b.task.id||Date.now(),c.complete=b.task.complete||!1,todoApp.add(c),todoUI.add(c)}),/* UI events */
e.on("click",function(){event.preventDefault();var a=prompt("Title","Untitled Task "+Math.round(1e6*Math.random()));c.trigger("NewTask.TodoAppUI",{task:{title:a}})}),d.on("click","button.action-todo-remove",function(){event.preventDefault();var a=$(this).closest("article"),b=a.attr("id");todoApp.remove(b),todoUI.remove(a)}),d.on("change","input[type=checkbox]",function(){event.preventDefault();var a=$(this).closest("article"),b=a.find("input[type=checkbox]:first"),c=a.attr("id"),d=b.is(":checked");d?todoApp.setComplete(c):todoApp.setIncomplete(c),todoUI.updateState(a)}),b()}),function(a){"use strict";function b(a){var b=a.id||Date.now();// + Math.round(Math.random()*1000000);
return d[a.id]=a,todoAppLibs.DataLayer.updateLocalData(),b}function c(a){return console.log("remove",a),delete d[a],todoAppLibs.DataLayer.updateLocalData(),a}var d={},e={add:b,remove:c,setComplete:function(a){d[a]&&(console.info("setComplete:",a),d[a].complete=!0,todoAppLibs.DataLayer.updateLocalData())},setIncomplete:function(a){d[a]&&(console.info("setIncomplete:",a),d[a].complete=!1,todoAppLibs.DataLayer.updateLocalData())},getAllTasks:function(){return d},getAllTasksArray:function(){var a=[];for(var b in d)d.hasOwnProperty(b)&&a.push(d[b]);return a}};a.todoApp=e}(window),function(a){"use strict";function b(a){
// employ a simple, but efficient cache
//console.debug('using uncached template', className);
return"undefined"==typeof h[a]&&(h[a]=$(g.find("."+a+" > *").get(0))),h[a].clone()}function c(a){
// Get a freshly cloned template element, ready for customizing and adding to the DOM.
var c=b("item-task");c.attr({id:a.id}),
// Set a few properties on it's elements
c.find("input[type=checkbox]").attr({id:"checkbox_"+a.id,name:"checkbox_"+a.id}),a.complete&&c.addClass("complete").find("input[type=checkbox]").attr({checked:"checked"}),c.find("label").text(a.title).attr({"for":"checkbox_"+a.id}),f.append(c),i++,clearTimeout(j),j=setTimeout(function(){i=0},1e3),c.velocity("transition.bounceLeftIn",{delay:80*i,duration:600}),console.log("Added task:",a)}function d(a){a.velocity("transition.bounceRightOut",{delay:150,duration:600,complete:function(){a.remove()}})}function e(a){var b=a.find("input[type=checkbox]:first"),c=b.is(":checked");c?a.addClass("complete"):a.removeClass("complete")}var f=($(".todo-app"),$(".todo-app .main")),g=$("#todo-app-templates"),h={},i=0,j=null,k={add:c,remove:d,updateState:e};a.todoUI=k}(window);
//# sourceMappingURL=master.min.js.map
